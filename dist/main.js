!function t(e,n,r){function o(u,c){if(!n[u]){if(!e[u]){var l="function"==typeof require&&require;if(!c&&l)return l(u,!0);if(i)return i(u,!0);var a=new Error("Cannot find module '"+u+"'");throw a.code="MODULE_NOT_FOUND",a}var s=n[u]={exports:{}};e[u][0].call(s.exports,function(t){var n=e[u][1][t];return o(n?n:t)},s,s.exports,t,e,n,r)}return n[u].exports}for(var i="function"==typeof require&&require,u=0;u<r.length;u++)o(r[u]);return o}({1:[function(t,e,n){"use strict";!function(){function t(t,e){return console.log("Intercepting"),{request:function(t){return t},response:function(t){return t}}}function e(t){}function n(t,e,n){var r=this;r.getQuote=function(){return t.get(e+"/auth/quote")},r.register=function(n,r){return t.post(e+"/auth/register",{username:n,password:r})}}function r(t,e){function n(t){var e=t.data?t.data.token:null;e&&console.log("JWT:",e),r.message=t.data.message}var r=this;r.login=function(){t.login(r.username,r.password).then(n,n)},r.register=function(){console.log("test"),t.register(r.username,r.password).then(n,n)},r.getQuote=function(){t.getQuote().then(n,n)},r.logout=function(){e.logout&&e.logout()},r.isAuthed=function(){return!!e.isAuthed&&e.isAuthed()}}t.$inject=["API","auth"],n.$inject=["$http","API","auth"],e.$inject=["$window"],r.$inject=["user","auth"],angular.module("practice",["ngRoute","angular-loading-bar","ngSanitize"]).directive("newContent",function(){return{template:"His"}}).directive("appHeader",function(){return{restrict:"E",templateUrl:"views/partials/header.html",controller:["$location",function(t){this.checkLink=function(e){return t.path()=="/"+e}}],controllerAs:"linkCtrl"}}).directive("appFooter",function(){return{restrict:"E",templateUrl:"views/partials/footer.html"}}).constant("config",{name:"Practice App"}).constant("API","http://localhost:5000").factory("activeLink",function(){var t="home";return{setLink:function(e){t=e},getLink:function(){return t}}}).factory("test",function(){return{isAuthenticated:!0}}).factory("authInterceptor",t).service("user",n).service("auth",e).controller("Main",r).config(["$routeProvider","$locationProvider","$httpProvider",function(t,e,n){n.interceptors.push("authInterceptor"),t.when("/",{templateUrl:"views/home.html",controller:"HomeController",controllerAs:"homeCtrl"}).when("/about",{templateUrl:"views/about.html",controller:"AboutController",controllerAs:"aboutCtrl"}).when("/contact",{templateUrl:"views/contact.html",controller:"ContactController",controllerAs:"contactCtrl",link:function(t,e){}}).when("/login",{templateUrl:"views/login.html",controller:r,controllerAs:"main"}).when("/register",{templateUrl:"views/register.html",controller:r,controllerAs:"main"}).otherwise({template:"No route defined"})}]).run(["$rootScope","$location","$log","test",function(t,e,n,r){t.$on("$routeChangeStart",function(t,n,o){"/"!==e.path()&&0==r.isAuthenticated&&alert("not allowed")}),t.$on("$routeChangeSuccess",function(t,e,n){})}])}()},{}]},{},[1]);